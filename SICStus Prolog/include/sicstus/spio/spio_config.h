/* -*- buffer-read-only:t -*- 
This file is automatically generated, do not edit */

/* -*- Mode: C; -*- */
#ifndef SPIO_CONFIG_PUBLIC_H_COMMON_INCLUDED
#define SPIO_CONFIG_PUBLIC_H_COMMON_INCLUDED

#if ECLIPSE_CDT
#undef SP_NO_PRIVATE_CONFIG
#endif  /* ECLIPSE_CDT */

#if LOCAL_INCLUDES
/* [PM] 4.1.3+ unconditionally, so we no longer need HAVE_CONFIG_H */
#include "config.h"
#else  /* !LOCAL_INCLUDES */
#include <sicstus/config.h>
#endif  /* !LOCAL_INCLUDES */


/***************** Propagage from sicstus config.h to SPIO ****************************/
/* All things in public part of this file taken from SICStus config.h
   must be in the PUBLIC section of config.h! */

#if SP_BIGENDIAN
#define SPIO_BIGENDIAN 1
#else  /* !SP_BIGENDIAN */
#define SPIO_BIGENDIAN 0
#endif  /* !SP_BIGENDIAN */


/***************************************************************/
/* SPIO_DEBUG must be set in public part */
/* NOTE: The SPIO_DEBUG logic must be synced with config.h.$SPIO_PLATFORM etc */
#ifndef SPIO_DEBUG
#if SICSTUS_DBG
/* [PM] 4.2.1 NOTE: We must maintain binary compatibility between
   debug and non-debug builds and between SICSTUS_DBG/DBG/SPIO_DEBUG
   off and on. This is so that we can link non-debug (customer) code
   with a debug build of SICStus.
   
   So, be careful when using SICSTUS_DBG/DBG/SPIO_DEBUG (Only
   SPIO_DEBUG should be used in SPIO).
*/
#define SPIO_DEBUG 1
#endif  /* SICSTUS_DBG */
#endif  /* SPIO_DEBUG */

#ifndef SICSTUS_RELEASE_BUILD
#error "expected SICSTUS_RELEASE_BUILD to be defined here"
#endif  /* SICSTUS_RELEASE_BUILD */

#ifndef SPIO_DEBUG

#if !SICSTUS_RELEASE_BUILD
#define SPIO_DEBUG 1            /* this will tell spio_debug.h to enable SPIO_ASSERTIONS */

#ifndef SPIO_SOFT_ASSERTIONS
/* If SPIO_DEBUG was turned on because of non-release build (as
   opposed to a debug build) then we want to disable soft assertions
   since these should only be enabled during a full debug build, not
   in non-debug betas and similar). */
/* Do not let non-release turn on soft assertions (hard assertions _will_ be enabled, since we set SPIO_DEBUG above) */
#define SPIO_SOFT_ASSERTIONS 0
#endif  /* SPIO_SOFT_ASSERTIONS */

#endif  /* !SICSTUS_RELEASE_BUILD */
#endif  /* SPIO_DEBUG */

/***************************************************************/

#include "spio_version.h"

#endif  /* SPIO_CONFIG_PUBLIC_H_COMMON_INCLUDED */

#if !SP_NO_PRIVATE_CONFIG       /* Set in sicstus.h to prevent private defines */

#ifndef SPIO_CONFIG_INTERNAL_H_COMMON_INCLUDED
#define SPIO_CONFIG_INTERNAL_H_COMMON_INCLUDED



/* *** FEATURES *** */








#define SPIO_USE_WIDTH_TABLES 0 /* width tables (used for seeking on text streams) does not yet work */

#ifndef SPIO_USE_WORK_ITEMS
#define SPIO_USE_WORK_ITEMS 1
#endif  /* SPIO_USE_WORK_ITEMS */
#ifndef SPIO_USE_LOCK
#define SPIO_USE_LOCK 1
#endif  /* SPIO_USE_LOCK */
#ifndef SPIO_RELIABLE_INTERRUPTS
#define SPIO_RELIABLE_INTERRUPTS 1
#endif
#ifndef SPIO_AUTO_RESET_INTERRUPTS
#define SPIO_AUTO_RESET_INTERRUPTS 1
#endif  /* !SPIO_AUTO_RESET_INTERRUPTS */

#ifndef SPIO_GLOBAL_WORK_ITEM_LOCK_BIGLOCK
#define SPIO_GLOBAL_WORK_ITEM_LOCK_BIGLOCK 1
#endif  /* !SPIO_GLOBAL_WORK_ITEM_LOCK_BIGLOCK */

#endif  /* SPIO_CONFIG_INTERNAL_H_COMMON_INCLUDED */

#endif /* !SP_NO_PRIVATE_CONFIG */

/* -*- Mode: C; -*- */
#ifndef SPIO_CONFIG_PUBLIC_H_WIN32_INCLUDED
#define SPIO_CONFIG_PUBLIC_H_WIN32_INCLUDED

#define SPIO_WIN32 1
#if defined(_WIN64)
/* [PM] 4.2.1+ 64-bit. At least Windows Server 2003 (including XP Pro x64). Implies SP_WIN32. */
#define SPIO_WIN64 1
#endif /* defined(_WIN64) */
/* 4.2.2 As POSIX WORD_BIT, LONG_BIT */
#define SPIO_WORD_BIT 32
#define SPIO_LONG_BIT 32 /* (!) Win64 has 32-bit long */
#if SPIO_WIN64
#define SPIO_PTR_BIT 64
#elif SPIO_WIN32
#define SPIO_PTR_BIT 32
#endif /* SPIO_WIN32 */

#endif  /* SPIO_CONFIG_PUBLIC_H_WIN32_INCLUDED */

#if !SP_NO_PRIVATE_CONFIG       /* Set in sicstus.h to prevent private defines */

#ifndef SPIO_CONFIG_INTERNAL_H_WIN32_INCLUDED
#define SPIO_CONFIG_INTERNAL_H_WIN32_INCLUDED


/* *** FEATURES *** */

#define SPIO_USE_WIN32_THREADS 1

#define SPIO_USE_SPIO_EVENT_WIN32 1

#define SPIO_CDECL __cdecl

#ifndef SPIO_HAVE_TASK_CANCEL_EVENT
/* [PM] 4.0.2 */
#define SPIO_HAVE_TASK_CANCEL_EVENT 1

#endif  /* SPIO_HAVE_TASK_CANCEL_EVENT */

#endif /* !SPIO_CONFIG_INTERNAL_H_WIN32_INCLUDED */

#endif  /* !SP_NO_PRIVATE_CONFIG */

